interface Options {
    project?: string | string[];
}
export declare const rules: {
    'no-console': string;
    'no-unused-vars': string;
    '@typescript-eslint/no-unused-vars': (string | {
        ignoreRestSiblings: boolean;
    })[];
    '@typescript-eslint/strict-boolean-expressions': string;
    'vue/multi-word-component-names': string;
    'vue/block-order': (string | {
        order: string[];
    })[];
    'vue/block-lang': (string | {
        script: {
            lang: string;
        };
    })[];
    'vue/component-api-style': (string | string[])[];
    'vue/component-name-in-template-casing': (string | {
        registeredComponentsOnly: boolean;
        ignores: never[];
    })[];
    'vue/custom-event-name-casing': (string | {
        ignores: never[];
    })[];
    'vue/define-emits-declaration': string[];
    'vue/define-props-declaration': string[];
    'vue/define-macros-order': (string | {
        order: string[];
    })[];
    'vue/html-button-has-type': (string | {
        button: boolean;
        submit: boolean;
        reset: boolean;
    })[];
    'vue/html-comment-indent': (string | number)[];
    'vue/max-lines-per-block': (string | {
        script: number;
        template: number;
        skipBlankLines: boolean;
    })[];
    'vue/max-props': (string | {
        maxProps: number;
    })[];
    'vue/next-tick-style': string[];
    'vue/no-deprecated-delete-set': string;
    'vue/no-duplicate-attr-inheritance': (string | {
        checkMultiRootNodes: boolean;
    })[];
    'vue/no-empty-component-block': string;
    'vue/no-ref-object-reactivity-loss': string;
    'vue/no-required-prop-with-default': (string | {
        autofix: boolean;
    })[];
    'vue/no-unused-emit-declarations': string;
    'vue/no-use-v-else-with-v-for': string;
    'vue/no-useless-v-bind': (string | {
        ignoreIncludesComment: boolean;
        ignoreStringEscape: boolean;
    })[];
    'vue/padding-line-between-blocks': string[];
    'vue/prefer-define-options': string;
    'vue/prefer-true-attribute-shorthand': string;
    'vue/prefer-use-template-ref': string;
    'vue/require-typed-ref': string;
    'vue/slot-name-casing': string[];
    'vue/v-bind-style': (string | {
        sameNameShorthand: string;
    })[];
};
declare const getConfig: (options?: Options) => ({
    readonly rules: Readonly<import("eslint").Linter.RulesRecord>;
} | import("eslint").Linter.FlatConfig | import("@typescript-eslint/utils/ts-eslint").FlatConfig.Config | {
    plugins: {
        'typescript-eslint': import("@typescript-eslint/utils/ts-eslint").FlatConfig.Plugin;
    };
    languageOptions: {
        parserOptions: {
            parser: import("@typescript-eslint/utils/ts-eslint").Parser.LooseParserModule;
            project: string | string[];
            extraFileExtensions: string[];
            sourceType: string;
        };
    };
    rules: {
        'no-console': string;
        'no-unused-vars': string;
        '@typescript-eslint/no-unused-vars': (string | {
            ignoreRestSiblings: boolean;
        })[];
        '@typescript-eslint/strict-boolean-expressions': string;
        'vue/multi-word-component-names': string;
        'vue/block-order': (string | {
            order: string[];
        })[];
        'vue/block-lang': (string | {
            script: {
                lang: string;
            };
        })[];
        'vue/component-api-style': (string | string[])[];
        'vue/component-name-in-template-casing': (string | {
            registeredComponentsOnly: boolean;
            ignores: never[];
        })[];
        'vue/custom-event-name-casing': (string | {
            ignores: never[];
        })[];
        'vue/define-emits-declaration': string[];
        'vue/define-props-declaration': string[];
        'vue/define-macros-order': (string | {
            order: string[];
        })[];
        'vue/html-button-has-type': (string | {
            button: boolean;
            submit: boolean;
            reset: boolean;
        })[];
        'vue/html-comment-indent': (string | number)[];
        'vue/max-lines-per-block': (string | {
            script: number;
            template: number;
            skipBlankLines: boolean;
        })[];
        'vue/max-props': (string | {
            maxProps: number;
        })[];
        'vue/next-tick-style': string[];
        'vue/no-deprecated-delete-set': string;
        'vue/no-duplicate-attr-inheritance': (string | {
            checkMultiRootNodes: boolean;
        })[];
        'vue/no-empty-component-block': string;
        'vue/no-ref-object-reactivity-loss': string;
        'vue/no-required-prop-with-default': (string | {
            autofix: boolean;
        })[];
        'vue/no-unused-emit-declarations': string;
        'vue/no-use-v-else-with-v-for': string;
        'vue/no-useless-v-bind': (string | {
            ignoreIncludesComment: boolean;
            ignoreStringEscape: boolean;
        })[];
        'vue/padding-line-between-blocks': string[];
        'vue/prefer-define-options': string;
        'vue/prefer-true-attribute-shorthand': string;
        'vue/prefer-use-template-ref': string;
        'vue/require-typed-ref': string;
        'vue/slot-name-casing': string[];
        'vue/v-bind-style': (string | {
            sameNameShorthand: string;
        })[];
    };
})[];
export default getConfig;
