import js from '@eslint/js';
import prettier from 'eslint-config-prettier';
import vue from 'eslint-plugin-vue';
import ts from 'typescript-eslint';
export const rules = {
    'no-console': 'warn',
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': ['error', { ignoreRestSiblings: true }],
    '@typescript-eslint/strict-boolean-expressions': 'error',
    'vue/multi-word-component-names': 'off',
    'vue/block-order': ['error', { order: ['script', 'template', 'style'] }],
    'vue/block-lang': ['error', { script: { lang: 'ts' } }],
    'vue/component-api-style': ['error', ['script-setup']],
    'vue/component-name-in-template-casing': [
        'error',
        'PascalCase',
        { registeredComponentsOnly: true, ignores: [] },
    ],
    'vue/custom-event-name-casing': [
        'error',
        'camelCase',
        {
            ignores: [],
        },
    ],
    'vue/define-emits-declaration': ['error', 'type-based'],
    'vue/define-props-declaration': ['error', 'type-based'],
    'vue/define-macros-order': [
        'error',
        {
            order: ['definePage', 'defineModel', 'defineCustom', 'defineEmits', 'defineSlots'],
        },
    ],
    'vue/html-button-has-type': ['error', { button: true, submit: true, reset: true }],
    'vue/html-comment-indent': ['error', 4],
    'vue/max-lines-per-block': ['warn', { script: 250, template: 250, skipBlankLines: true }],
    'vue/max-props': ['warn', { maxProps: 10 }],
    'vue/next-tick-style': ['error', 'promise'],
    'vue/no-deprecated-delete-set': 'error',
    'vue/no-duplicate-attr-inheritance': [
        'error',
        {
            checkMultiRootNodes: true,
        },
    ],
    'vue/no-empty-component-block': 'error',
    'vue/no-ref-object-reactivity-loss': 'error',
    'vue/no-required-prop-with-default': [
        'error',
        {
            autofix: false,
        },
    ],
    'vue/no-unused-emit-declarations': 'error',
    'vue/no-use-v-else-with-v-for': 'error',
    'vue/no-useless-v-bind': [
        'error',
        {
            ignoreIncludesComment: false,
            ignoreStringEscape: false,
        },
    ],
    'vue/padding-line-between-blocks': ['error', 'always'],
    'vue/prefer-define-options': 'error',
    'vue/prefer-true-attribute-shorthand': 'error',
    'vue/prefer-use-template-ref': 'error',
    'vue/require-typed-ref': 'error',
    'vue/slot-name-casing': ['error', 'camelCase'],
    'vue/v-bind-style': [
        'error',
        'shorthand',
        {
            sameNameShorthand: 'always',
        },
    ],
};
const getConfig = (options = {}) => {
    const { project = ['./tsconfig.app.json', './tsconfig.node.json'] } = options;
    return [
        // JavaScript recommended
        js.configs.recommended,
        // TypeScript strict
        ...ts.configs.recommended,
        // Vue specific rules
        ...vue.configs['flat/recommended'],
        // Custom rules
        {
            plugins: {
                'typescript-eslint': ts.plugin,
            },
            languageOptions: {
                parserOptions: {
                    parser: ts.parser,
                    project,
                    extraFileExtensions: ['.vue'],
                    sourceType: 'module',
                },
            },
            rules,
        },
        // Prettier
        prettier,
    ];
};
export default getConfig;
